{"version":3,"sources":["components/Header/Header.jsx","components/FormDialog/FormDialog.jsx","components/Card/Card.jsx","components/More/CustomizedDialogs.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","onSubmit","doSearch","type","name","autoFocus","placeholder","FormDialog","open","handleClose","title","desc","date","handleTitle","handleDesc","handleDate","save","variant","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","TextField","margin","label","fullWidth","value","onChange","defaultValue","InputLabelProps","shrink","DialogActions","Button","onClick","color","OutlinedCard","announcement","openDialog","openSettings","el","setAnnoun","setDate","setDesc","setId","setTitle","setOpenMore","setObj","searchSimilar","cardVariant","Card","IconButton","filtered","filter","deleteCard","CardContent","Typography","gutterBottom","component","CustomizedDialogs","openMore","obj","similar","map","item","key","App","useState","setOpen","setOpenSettings","setVariant","setSimilar","settings","e","a","preventDefault","search","target","elements","JSON","parse","localStorage","getItem","searched","uuidv4","state","filt","push","setItem","stringify","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5323667c.chunk.js","sourcesContent":["import React from 'react';\nimport './header.css';\n\n\nfunction Header(props) {\n\n    return (\n\n        <div className='header'>\n            <div className='title'>Announcement</div>\n            <div className='search-field'>\n                <form onSubmit={props.doSearch}>\n                    <input className='search-input' type='search' name='search' autoFocus placeholder='announcement..'/>\n                    <button className='button' type='submit'>Search</button>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function FormDialog(props) {\n\n    const { open, handleClose,  title, desc, date ,handleTitle, handleDesc, handleDate, save, variant } = props\n\n    return (\n        <div>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">\n                    {variant}\n                </DialogTitle>\n\n                <DialogContent>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Title\"\n                        type=\"text\"\n                        fullWidth\n                        value={title}\n                        onChange={handleTitle}\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"desc\"\n                        label=\"Description\"\n                        type=\"text\"\n                        fullWidth\n                        value={desc}\n                        onChange={handleDesc}\n                    />\n                    <TextField\n                        className='my-5'\n                        id=\"datetime-local\"\n                        label=\"Add Date\"\n                        type=\"datetime-local\"\n                        defaultValue=\"2020-10-24T10:30\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        value={date}\n                        onChange={handleDate}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={() => {\n                        save(variant, props.id)\n                        handleClose()\n                    }} color=\"primary\">\n                        Save\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\n\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport './card.css';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\n\n\n\nexport default function OutlinedCard(props) {\n\n    const {\n        announcement,\n        openDialog,\n        openSettings,\n        el,\n        setAnnoun,\n        date,\n        desc,\n        id,\n        setDate,\n        setDesc,\n        setId,\n        setTitle,\n        title,\n        setOpenMore,\n        setObj,\n        searchSimilar,\n        cardVariant,\n        className\n    } = props\n\n    const deleteCard = (id) => {\n        const filtered = announcement.filter((el) => (el.id !== id))\n        setAnnoun(filtered);\n    }\n    return (\n        <Card className={`root ${className}`} variant=\"outlined\">\n            {\n                cardVariant==='uncontrolled' ? //варіант картки\n                    ''\n                    :\n                    <div className='navigate'>\n                        <IconButton className={openSettings ? '' : 'd-none'} onClick={() => {\n                            setTitle(el.title)\n                            setDate(el.date)\n                            setDesc(el.desc)\n                            setId(el.id)\n                            openDialog('edit')\n                        }}>\n                            <EditIcon/>\n                        </IconButton>\n                        <IconButton className={openSettings ? '' : 'd-none'} onClick={() => (deleteCard(id))}>\n                            <HighlightOffIcon/>\n                        </IconButton>\n                    </div>\n            }\n\n            <CardContent>\n                <Typography className='card-title' gutterBottom>\n                    {title}\n                </Typography>\n                <Typography className='pos'>\n                    {desc}\n                </Typography>\n                <div className='more'>\n                    {\n                        cardVariant==='uncontrolled' ?\n                            ''\n                            :\n                            <Button  onClick={()=> {\n                                setOpenMore(true)\n                                setObj(el)\n                                searchSimilar(el)\n                            }}>\n                                More\n                            </Button>\n                    }\n\n                    <Typography  className='date' variant=\"body2\" component=\"p\">\n                        {date}\n                    </Typography>\n                </div>\n            </CardContent>\n        </Card>\n    );\n}\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport './more.css';\nimport OutlinedCard from \"../Card/Card\";\n\nexport default function CustomizedDialogs(props) {\n    const { openMore, setOpenMore, obj,similar } = props\n\n    const handleClose = () => {\n        setOpenMore(false)\n    }\n\n    return (\n            <Dialog className=\"size\" onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={openMore}>\n                <DialogActions onClick={handleClose}>\n                    <CloseIcon />\n                </DialogActions>\n\n                <DialogTitle id=\"customized-dialog-title\">\n                    {obj.title}\n                </DialogTitle>\n                <DialogContent>\n                    <h5>Description:</h5>\n                    <Typography gutterBottom>\n                        {obj.desc}\n                    </Typography>\n                    <h5>Date:</h5>\n                    <Typography gutterBottom>\n                        {obj.date}\n                    </Typography>\n                    <hr/>\n                    <h5>Similar Announcements</h5>\n                    <div className='d-flex flex-wrap'>\n                        {similar.map((item)=> (\n                            <OutlinedCard className='mx-2 my-2' cardVariant={'uncontrolled'} key={item.id+'k'} title={item.title} desc={item.desc} date={item.date}/>\n                        ))}\n                    </div>\n\n                </DialogContent>\n\n            </Dialog>\n    );\n}\n","import React, {useState} from 'react';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport Header from \"./components/Header/Header\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddIcon from '@material-ui/icons/Add';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport FormDialog from \"./components/FormDialog/FormDialog\";\nimport OutlinedCard from \"./components/Card/Card\";\nimport CustomizedDialogs from \"./components/More/CustomizedDialogs\";\n\nfunction App() {\n    const [open, setOpen ] = useState(false);\n    const [openSettings, setOpenSettings ] = useState(false);\n    const [variant, setVariant ] = useState('create');\n    const [title, setTitle] = useState('');\n    const [id, setId] = useState('');\n    const [date, setDate] = useState('');\n    const [desc, setDesc] = useState('');\n    const [announcement, setAnnoun] = useState([]);\n    const [openMore, setOpenMore ] = useState(false);\n    const [obj, setObj] = useState([]);\n    const [similar, setSimilar] = useState([]);\n\n    const openDialog = (variant) => {\n        setVariant(variant)\n        if(variant==='create'){\n            setDesc('')\n            setDate('')\n            setTitle('')\n        }\n        setOpen(true)\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const settings = () => {\n        setOpenSettings(!openSettings)\n    };\n\n    const handleTitle = (e) => {\n        setTitle(e.target.value);\n    }\n    const handleDesc = (e) => {\n        setDesc(e.target.value);\n    }\n    const handleDate = (e) => {\n        setDate(e.target.value);\n    }\n\n    const saveAnnouncement = (variant, id) => {\n        const obj = {\n            id:  uuidv4(),\n            title: title,\n            desc: desc,\n            date: date\n        }\n        const state = announcement;\n        if(variant==='edit'){\n            const filt = state.filter(el=>el.id!==id)\n            filt.push(obj)\n            setAnnoun(filt)\n            localStorage.setItem('announcements', JSON.stringify(filt))\n        }\n        else {\n            state.push(obj)\n            setAnnoun(state);\n            localStorage.setItem('announcements', JSON.stringify(state))\n\n        }\n    };\n\n    const doSearch = async (e) => {\n        e.preventDefault();\n        const search = e.target.elements.search.value;\n        const searched = await JSON.parse(localStorage.getItem('announcements'))\n            .filter((el) => (el.title === search));\n        await setAnnoun(searched);\n    }\n\n    const searchSimilar = (obj)=> {\n        const filterSimilar = announcement.filter((el) => el.title === obj.title||el.desc === obj.desc)\n        const filtered = filterSimilar.filter((el) => el!==obj)\n        setSimilar(filtered);\n    }\n\n    return (\n      <div className=\"App\">\n          <Header doSearch={doSearch}/>\n          <div className='settings'>\n          <IconButton onClick={()=>(openDialog('create'))}>\n              <AddIcon/>\n          </IconButton>\n          <IconButton onClick={settings}>\n              <SettingsIcon className={openSettings? 'green': ''}/>\n          </IconButton>\n          </div>\n          <FormDialog\n              handleClose={handleClose}\n              open={open}\n              title={title}\n              desc={desc}\n              date={date}\n              handleTitle={handleTitle}\n              handleDesc={handleDesc}\n              handleDate={handleDate}\n              save={saveAnnouncement}\n              variant={variant}\n              id={id}\n          />\n          <div className='main-cards'>\n              {\n                  announcement.map((el)=> {\n                      return (\n                          <OutlinedCard el={el}\n                                        className={'mx-4 my-3'}\n                                        key={el.id+'key'}\n                                        id={el.id}\n                                        title={el.title}\n                                        desc={el.desc}\n                                        date={el.date}\n                                        setAnnoun={setAnnoun}\n                                        settings={settings}\n                                        setTitle={setTitle}\n                                        setDate={setDate}\n                                        setDesc={setDesc}\n                                        setId={setId}\n                                        announcement={announcement}\n                                        openSettings={openSettings}\n                                        openDialog={openDialog}\n                                        setOpenMore={setOpenMore}\n                                        setObj={setObj}\n                                        searchSimilar={searchSimilar}\n                          />\n                      )\n                  })\n              }\n          </div>\n          <CustomizedDialogs openMore={openMore} setOpenMore={setOpenMore} obj={obj} similar={similar}/>\n      </div>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}